import groovy.json.JsonOutput
import groovy.json.JsonSlurper
import groovy.json.StringEscapeUtils

architectury {
    common(project.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = project(":fabric").file("src/main/resources/fishofthieves.accesswidener")

    mixin {
        defaultRefmapName = "mixins.fishofthieves.refmap.json"
    }
}

sourceSets {
    main {
        resources {
            srcDirs += "src/generated/resources/"
        }
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "net.fabricmc", module: "fabric-loader"
    }
}

processResources {
    doLast {
        minifyJson(outputs)
    }
}

jar {
    exclude ".cache"
}

def minifyJson(TaskOutputs outputs) {
    fileTree(dir: outputs.files.asPath, include: ["**/*.json", "**/*.mcmeta"]).each {
        file -> file.text = StringEscapeUtils.unescapeJavaScript(JsonOutput.toJson(new JsonSlurper().parse(file)))
    }
}