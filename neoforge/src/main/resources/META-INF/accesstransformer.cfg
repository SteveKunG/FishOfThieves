# Fields
public net.minecraft.world.item.MobBucketItem type
public net.minecraft.world.item.MobBucketItem emptySound
public-f net.minecraft.world.level.storage.loot.LootPool entries
public net.minecraft.world.level.storage.loot.LootPool$Builder entries
public net.minecraft.data.loot.EntityLootSubProvider ENTITY_ON_FIRE
public net.minecraft.world.level.block.DispenserBlock DISPENSER_REGISTRY
public net.minecraft.advancements.critereon.EntitySubPredicates$EntityHolderVariantPredicateType codec

# Methods
public net.minecraft.core.registries.BuiltInRegistries registerSimple(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/Registry;
public net.minecraft.data.worldgen.Structures structure(Lnet/minecraft/core/HolderSet;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Lnet/minecraft/world/level/levelgen/structure/Structure$StructureSettings;
public net.minecraft.world.entity.ai.sensing.SensorType <init>(Ljava/util/function/Supplier;)V
public net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction simpleBuilder(Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder;
public net.minecraft.world.level.storage.loot.functions.SetCustomModelDataFunction <init>(Ljava/util/List;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)V
public net.minecraft.world.level.storage.loot.functions.SetFireworksFunction <init>(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)V

# Classes
public net.minecraft.world.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems
public net.minecraft.world.entity.npc.VillagerTrades$EmeraldForItems
public net.minecraft.world.entity.npc.VillagerTrades$ItemsForEmeralds
public net.minecraft.core.registries.BuiltInRegistries$RegistryBootstrap