plugins {
    id "fabric-loom" version "0.10-SNAPSHOT"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

loom {
    //accessWidenerPath = file("src/main/resources/fishofthieves.accesswidener")

    mixin {
        defaultRefmapName = "mixins.fishofthieves.refmap.json"
    }

    runs {
        datagen {
            server()
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
            runDir "build/datagen"
        }
    }
}

repositories {
    maven {
        name "Shedaniel Maven"
        url "https://maven.shedaniel.me"
    }
    maven {
        name "TerraformersMC"
        url "https://maven.terraformersmc.com/releases"
    }
    maven {
        name "ParchmentMC"
        url "https://maven.parchmentmc.org"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${rootProject.parchmentmc_version}@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    modImplementation ("com.terraformersmc:modmenu:${mod_menu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation ("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}