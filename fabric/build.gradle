apply from: "https://gist.githubusercontent.com/SteveKunG/21a21c3c0d05ab0bb8f2256f60911259/raw/d93ad35119139fbfaefce4e6b42778008a737d3d/fabric_architectury.gradle"

sourceSets {
    gametest {
        runtimeClasspath += main.runtimeClasspath + main.output
        compileClasspath += main.compileClasspath + main.output
    }
}

loom {
    List<String> commonVmArgs = [
            "-Dfabric.systemLibraries=${System.getProperty("java.home")}/lib/hotswap/hotswap-agent.jar".toString(),
            "-XX:+AllowEnhancedClassRedefinition",
            "-XX:HotswapAgent=fatjar",
            "-XX:+IgnoreUnrecognizedVMOptions"
    ]
    Map<String, String> commonProperties = ["mixin.debug.export": "true", "mixin.hotSwap": "true"]
    accessWidenerPath = project(":common").loom.accessWidenerPath

    runs {
        client {
            if (project.hasProperty("username") && project.hasProperty("uuid")) {
                programArgs "--username=${username}", "--uuid=${uuid}"
            }
            properties commonProperties
            vmArgs commonVmArgs
        }
        server {
            properties commonProperties
            vmArgs commonVmArgs
        }
        gametest {
            if (project.hasProperty("username") && project.hasProperty("uuid")) {
                programArgs "--username=${username}", "--uuid=${uuid}"
            }
            client()
            name "Game Test Client"
            source sourceSets.gametest
            properties commonProperties
            vmArgs commonVmArgs
            vmArg "-Dfabric-api.gametest"
        }
        datagen {
            server()
            name "Fabric Data Generation"
            property "fabric-api.datagen"
            property "fabric-api.datagen.output-dir", "${project(":common").file("src/generated/resources")}"
            runDir "build/datagen"
        }
    }

    mixin {
        defaultRefmapName = "mixins.fishofthieves_fabric.refmap.json"
    }
}

dependencies {
    modLocalRuntime "maven.modrinth:lazydfu:0.1.3"

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "net.fabricmc", module: "fabric-loader"
    }
}

String fileName = "${archives_base_name}-mc${minecraft_version}"
List<String> devExcludes = ["**/gametest/", "**/datagen/", "architectury.common.json"]

shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev"
    archiveVersion = "v${mod_version}"
    archiveBaseName = fileName
    excludes = devExcludes
}

sourcesJar {
    Jar commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
    excludes = devExcludes
}

tasks.register("apiJar", Jar) {
    group "build"
    from project(":common").sourceSets.main.allJava
    from project(":common").sourceSets.main.output
    include "com/stevekung/fishofthieves/api/**/*"
    archiveVersion = "v${mod_version}"
    archiveBaseName = fileName
    archiveClassifier = "api"
}

artifacts {
    archives apiJar
}

remapSourcesJar {
    archiveVersion = "v${mod_version}"
    archiveBaseName = fileName
}

remapJar {
    injectAccessWidener = true
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = "fabric" + (release_type != "release" ? "-${release_type}" : "")
    archiveVersion = "v${mod_version}"
    archiveBaseName = fileName
}

curseforge {
    apiKey = project.hasProperty("curseforge_api_token") ? curseforge_api_token : ""
    project {
        id = "568372"
        changelog = rootProject.file("CHANGE_LOG.md")
        changelogType = "markdown"
        releaseType = project.release_type
        addGameVersion "Fabric"
        addGameVersion "Java ${java_version}"
        addGameVersion project.minecraft_version

        mainArtifact(remapJar.archiveFile) {
            it.displayName = "[Fabric ${minecraft_version}] Fish of Thieves v${mod_version}"
        }
        relations {
            it.requiredDependency "fabric-api"
            it.requiredDependency "cloth-config"
            it.optionalDependency "modmenu"
            it.optionalDependency "canvas-renderer"
        }
        afterEvaluate {
            uploadTask.dependsOn(remapJar)
        }
        addArtifact shadowJar
        addArtifact remapSourcesJar
        addArtifact apiJar
    }
    options {
        debug = debug_upload
        forgeGradleIntegration = false
    }
}

modrinth {
    debugMode = debug_upload as boolean
    token = project.hasProperty("modrinth_api_token") ? modrinth_api_token : ""
    projectId = "fish-of-thieves"
    changelog = rootProject.file("CHANGE_LOG.md").text
    syncBodyFrom = rootProject.file("README.md").text
    versionName = "[Fabric ${project.minecraft_version}] Fish of Thieves v${mod_version}"
    versionNumber = project.mod_version + "-fabric"
    versionType = project.release_type
    uploadFile = remapJar
    additionalFiles = [shadowJar, remapSourcesJar, apiJar]
    gameVersions = ["${minecraft_version}"]
    loaders = ["fabric"]
    dependencies {
        required.project "fabric-api"
        required.project "cloth-config"
        optional.project "modmenu"
        optional.project "canvas"
    }
}